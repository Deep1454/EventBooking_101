version: '3.9'

services:
  userservice-db:
    image: postgres
    ports:
      - "5432:5432"
    container_name: UserService
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    volumes:
      - ./data/users:/var/lib/postgresql/data
      - ./init/postgres/users/init.sql:/init.sql

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8888:80"
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.ca
      PGADMIN_DEFAULT_PASSWORD: password

  roomservice-db:
    image: postgres
    ports:
      - "5433:5432"
    container_name: RoomService
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    volumes:
      - ./data/rooms:/var/lib/postgresql/data
      - ./init/postgres/rooms/init.sql:/init.sql

  booking-service:
    build:
      context: ./BookingService  # The directory where the Dockerfile resides
      dockerfile: Dockerfile     # Specify the Dockerfile for building the image
    image: booking-service
    container_name: booking-service
    ports:
      - "2012:2012"  # Maps BookingService's internal port 2012 to host port 2012
    environment:
      SPRING_PROFILES_ACTIVE: docker  # Tells Spring Boot to use the "docker" profile
      MONGO_URI: mongodb://admin:password@mongodb:27017/booking_service_db  # MongoDB URI for BookingService
    depends_on:
      - mongodb
    networks:
      - spring

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27018:27017"  # Maps MongoDB's internal port 27017 to host port 27018
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./data/mongo:/data/db  # Persist data on the host machine
      - ./init/mongo/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro  # Initialization scripts, if any
    networks:
      - spring

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8082:8081"  # Maps Mongo-Express's internal port 8081 to host port 8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      - mongodb
    networks:
      - spring

networks:
  spring:
    driver: bridge
